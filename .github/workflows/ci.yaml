name: Habij Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run Lint and Format
        run: |
          poetry run ruff check .
          poetry run ruff check . --fix

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint # Ensures this job runs after linting
    if: github.ref == 'refs/heads/main' # Only runs on push to main branch
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          REPO_NAME="habij-backend"
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/$REPO_NAME
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build # Ensures this job runs after the build job
    if: github.ref == 'refs/heads/main' # Only runs on push to main branch
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          # Create the SSH directory
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Write the private key to the file
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the VPS to known hosts
          ssh-keyscan -H $VPS_IP >> ~/.ssh/known_hosts

          # SSH into the VPS and deploy
          ssh $VPS_USER@$VPS_IP << 'EOF'

          REPO_NAME="habij-backend"
          CONTAINER_NAME="${REPO_NAME}"
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/$REPO_NAME

          # Pull the latest Docker image
          docker pull $IMAGE_NAME:latest


          # Stop and remove any existing container with the same name
          if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
          fi

          # Ensure the environment file exists
          if [ ! -f /etc/$REPO_NAME/env/$REPO_NAME.env ]; then
              echo "Environment file missing at /etc/$REPO_NAME/env/$REPO_NAME.env"
              exit 1
          fi

          docker run -d --name $CONTAINER_NAME -p 8000:8000 \
            --env-file /etc/$REPO_NAME/env/$REPO_NAME.env \
            $IMAGE_NAME:latest

          # Reload Nginx
          sudo systemctl reload nginx
          EOF
